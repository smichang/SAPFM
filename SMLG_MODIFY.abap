FUNCTION SMLG_MODIFY.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(SET_LOCK) LIKE  SY-BATCH DEFAULT 'X'
*"     VALUE(GROUPTYPE) LIKE  RZLLITAB-GROUPTYPE DEFAULT SPACE
*"  TABLES
*"      MODIFICATIONS STRUCTURE  RZLLIMODIF
*"      ERFC_MODIFICATIONS STRUCTURE  RZLLIMODGP
*"  EXCEPTIONS
*"      INVALID_MOD_IDENTIFIER
*"      DELETION_FAILED
*"      UPDATE_FAILED
*"      INSERTION_FAILED
*"      FOREIGN_LOCK
*"      SYSTEM_FAILURE
*"      INVALID_GROUP_TYPE
*"      INTERNAL_ERROR_IN_NUMBER_GEN
*"      NO_ADMIN_AUTHORITY
*"----------------------------------------------------------------------

  "table with items for deletion
  DATA DEL_TAB LIKE RZLLITAB OCCURS 0 WITH HEADER LINE.

  "table with items for insertion
  DATA INS_TAB LIKE RZLLITAB OCCURS 0 WITH HEADER LINE.

  "table with items of update
  DATA UPD_TAB LIKE RZLLITAB OCCURS 0 WITH HEADER LINE.

  DATA: ITEMS TYPE I,           "# of items in a table
        erfc_items type i.

****another set for erfc****
  DATA ERFC_DEL_TAB LIKE RZLLICLASS OCCURS 0 WITH HEADER LINE.
  DATA ERFC_INS_TAB LIKE RZLLICLASS OCCURS 0 WITH HEADER LINE.
  DATA ERFC_UPD_TAB LIKE RZLLICLASS OCCURS 0 WITH HEADER LINE.

  AUTHORITY-CHECK OBJECT 'S_RZL_ADM' ID 'ACTVT' FIELD '01'.

  IF sy-subrc <> 0.
    RAISE NO_ADMIN_AUTHORITY.
  ENDIF.

  IF    GROUPTYPE NE LOGON_GROUPS
    AND GROUPTYPE NE BPSRV_GROUPS
    AND GROUPTYPE NE RFCSRV_GROUPS.
    RAISE INVALID_GROUP_TYPE.
  ENDIF.

  DESCRIBE TABLE MODIFICATIONS LINES ITEMS.
  DESCRIBE TABLE ERFC_MODIFICATIONS LINES ERFC_ITEMS.
  CHECK ITEMS > 0 or erfc_items > 0. "something to do?
* Set lock if necessary
  IF NOT ( SET_LOCK IS INITIAL ).
    PERFORM LOCK_ALL USING GROUPTYPE.
    CASE SY-SUBRC.
      WHEN 1. "foreign lock exists
        RAISE FOREIGN_LOCK.
      WHEN 2. "system failure
        RAISE SYSTEM_FAILURE.
    ENDCASE.
  ENDIF.

* Build tables with records to delete, update and insert
  LOOP AT MODIFICATIONS.
    MODIFICATIONS-GROUPTYPE = GROUPTYPE.
    CASE MODIFICATIONS-MODIFICATN.
      WHEN 'I'. "insertion of an item
        INS_TAB = MODIFICATIONS.
        APPEND INS_TAB.
      WHEN 'D'. "deletion of an item
        DEL_TAB = MODIFICATIONS.
        APPEND DEL_TAB.
      WHEN 'U'. "update of an item
        UPD_TAB = MODIFICATIONS.
        APPEND UPD_TAB.
      WHEN OTHERS. "invalid modification identifier
        IF NOT ( SET_LOCK IS INITIAL ).
          PERFORM UNLOCK_ALL USING GROUPTYPE.
        ENDIF.
        RAISE INVALID_MOD_IDENTIFIER.
    ENDCASE.
  ENDLOOP.

* Now modify table RZLLITAB
  DESCRIBE TABLE DEL_TAB LINES ITEMS.
  IF ITEMS > 0.
    DELETE RZLLITAB FROM TABLE DEL_TAB.
    IF SY-SUBRC NE 0.
      IF NOT ( SET_LOCK IS INITIAL ).
        PERFORM UNLOCK_ALL USING GROUPTYPE.
      ENDIF.
      RAISE DELETION_FAILED.
    ENDIF.
  ENDIF.
  DESCRIBE TABLE UPD_TAB LINES ITEMS.
  IF ITEMS > 0.
    UPDATE RZLLITAB FROM TABLE UPD_TAB.
    IF SY-SUBRC NE 0.
      IF NOT ( SET_LOCK IS INITIAL ).
        PERFORM UNLOCK_ALL USING GROUPTYPE.
      ENDIF.
      RAISE UPDATE_FAILED.
    ENDIF.
  ENDIF.
  DESCRIBE TABLE INS_TAB LINES ITEMS.
  IF ITEMS > 0.
    INSERT RZLLITAB FROM TABLE INS_TAB.
    IF SY-SUBRC NE 0.
      IF NOT ( SET_LOCK IS INITIAL ).
        PERFORM UNLOCK_ALL USING GROUPTYPE.
      ENDIF.
      RAISE INSERTION_FAILED.
    ENDIF.
  ENDIF.

********Do similar stuff for RZLLICLASS (eRFC).........no modular form
if GROUPTYPE = LOGON_GROUPS.
  LOOP AT ERFC_MODIFICATIONS.
*    ERFC_MODIFICATIONS-GROUPTYPE = GROUPTYPE.
    CASE ERFC_MODIFICATIONS-MODIFICATN.
      WHEN 'I'. "insertion of an item
        ERFC_INS_TAB = ERFC_MODIFICATIONS.
        APPEND ERFC_INS_TAB.
      WHEN 'D'. "deletion of an item
        ERFC_DEL_TAB = ERFC_MODIFICATIONS.
        APPEND ERFC_DEL_TAB.
      WHEN 'U'. "update of an item
        ERFC_UPD_TAB = ERFC_MODIFICATIONS.
        APPEND ERFC_UPD_TAB.
      WHEN OTHERS. "invalid modification identifier
        IF NOT ( SET_LOCK IS INITIAL ).
          PERFORM UNLOCK_ALL USING GROUPTYPE.
        ENDIF.
        RAISE INVALID_MOD_IDENTIFIER.
    ENDCASE.
  ENDLOOP.

* Now modify table RZLLICLASS
  DESCRIBE TABLE ERFC_DEL_TAB LINES ITEMS.
  IF ITEMS > 0.
    DELETE RZLLICLASS FROM TABLE ERFC_DEL_TAB.
    IF SY-SUBRC NE 0.
      IF NOT ( SET_LOCK IS INITIAL ).
        PERFORM UNLOCK_ALL USING GROUPTYPE.
      ENDIF.
      RAISE DELETION_FAILED.
    ENDIF.
  ENDIF.
  DESCRIBE TABLE ERFC_UPD_TAB LINES ITEMS.
  IF ITEMS > 0.
    UPDATE RZLLICLASS FROM TABLE ERFC_UPD_TAB.
    IF SY-SUBRC NE 0.
      IF NOT ( SET_LOCK IS INITIAL ).
        PERFORM UNLOCK_ALL USING GROUPTYPE.
      ENDIF.
      RAISE UPDATE_FAILED.
    ENDIF.
  ENDIF.
  DESCRIBE TABLE ERFC_INS_TAB LINES ITEMS.
  IF ITEMS > 0.
    INSERT RZLLICLASS FROM TABLE ERFC_INS_TAB.
    IF SY-SUBRC NE 0.
      IF NOT ( SET_LOCK IS INITIAL ).
        PERFORM UNLOCK_ALL USING GROUPTYPE.
      ENDIF.
      RAISE INSERTION_FAILED.
    ENDIF.
  ENDIF.
ENDIF.    "only for Logon groups on eRFC

  IF NOT ( SET_LOCK IS INITIAL ).
    PERFORM UNLOCK_ALL USING GROUPTYPE.
  ENDIF.
ENDFUNCTION.
